{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\bot-battlr\\\\src\\\\components\\\\BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotCollection({\n  onAddBot\n}) {\n  _s();\n  const [bots, setBots] = useState([]);\n\n  // Fetch bots from JSON server\n  useEffect(() => {\n    fetch(\"http://localhost:8001/bots\").then(res => res.json()).then(data => setBots(data)).catch(err => console.error(\"Error fetching bots:\", err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      gap: \"15px\",\n      justifyContent: \"center\"\n    },\n    children: bots.map(bot => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid gray\",\n        padding: \"10px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        cursor: \"pointer\"\n      },\n      onClick: () => onAddBot(bot),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: bot.avatar_url,\n        alt: bot.name,\n        width: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: bot.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: bot.bot_class\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"HP: \", bot.health, \" | DMG: \", bot.damage, \" | Armor: \", bot.armor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, bot.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(BotCollection, \"HLWYdwhjlsHzdjlYtqtFyxxPKrE=\");\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","BotCollection","onAddBot","_s","bots","setBots","fetch","then","res","json","data","catch","err","console","error","style","display","flexWrap","gap","justifyContent","children","map","bot","border","padding","width","textAlign","cursor","onClick","src","avatar_url","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","bot_class","health","damage","armor","id","_c","$RefreshReg$"],"sources":["C:/Users/Hp/bot-battlr/src/components/BotCollection.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction BotCollection({ onAddBot }) {\r\n  const [bots, setBots] = useState([]);\r\n\r\n  // Fetch bots from JSON server\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8001/bots\")\r\n      .then((res) => res.json())\r\n      .then((data) => setBots(data))\r\n      .catch((err) => console.error(\"Error fetching bots:\", err));\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"15px\", justifyContent: \"center\" }}>\r\n      {bots.map((bot) => (\r\n        <div\r\n          key={bot.id}\r\n          style={{\r\n            border: \"1px solid gray\",\r\n            padding: \"10px\",\r\n            width: \"200px\",\r\n            textAlign: \"center\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={() => onAddBot(bot)}\r\n        >\r\n          <img src={bot.avatar_url} alt={bot.name} width=\"100\" />\r\n          <h3>{bot.name}</h3>\r\n          <p>{bot.bot_class}</p>\r\n          <p>HP: {bot.health} | DMG: {bot.damage} | Armor: {bot.armor}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BotCollection;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,aAAaA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAD,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,OAAO,CAACK,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAKe,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE,MAAM;MAAEC,GAAG,EAAE,MAAM;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,EACtFhB,IAAI,CAACiB,GAAG,CAAEC,GAAG,iBACZtB,OAAA;MAEEe,KAAK,EAAE;QACLQ,MAAM,EAAE,gBAAgB;QACxBC,OAAO,EAAE,MAAM;QACfC,KAAK,EAAE,OAAO;QACdC,SAAS,EAAE,QAAQ;QACnBC,MAAM,EAAE;MACV,CAAE;MACFC,OAAO,EAAEA,CAAA,KAAM1B,QAAQ,CAACoB,GAAG,CAAE;MAAAF,QAAA,gBAE7BpB,OAAA;QAAK6B,GAAG,EAAEP,GAAG,CAACQ,UAAW;QAACC,GAAG,EAAET,GAAG,CAACU,IAAK;QAACP,KAAK,EAAC;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvDpC,OAAA;QAAAoB,QAAA,EAAKE,GAAG,CAACU;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnBpC,OAAA;QAAAoB,QAAA,EAAIE,GAAG,CAACe;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBpC,OAAA;QAAAoB,QAAA,GAAG,MAAI,EAACE,GAAG,CAACgB,MAAM,EAAC,UAAQ,EAAChB,GAAG,CAACiB,MAAM,EAAC,YAAU,EAACjB,GAAG,CAACkB,KAAK;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAb3Dd,GAAG,CAACmB,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcR,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACjC,EAAA,CAjCQF,aAAa;AAAAyC,EAAA,GAAbzC,aAAa;AAmCtB,eAAeA,aAAa;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}